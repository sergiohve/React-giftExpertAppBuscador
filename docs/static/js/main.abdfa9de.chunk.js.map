{"version":3,"sources":["components/Addcategory.js","helpers/GetGift.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","alert","type","value","onChange","target","GetGift","category","a","url","encodeURI","fetch","resp","json","data","gift","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","console","log","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAkB5C,OAEI,0BAAMC,SAZI,SAACC,GACbA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,GAC5BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACrCN,EAAc,KAEZO,MAAM,qBAOR,2BACIC,KAAK,OACLC,MAAOV,EACPW,SArBO,SAACR,GACfF,EAAcE,EAAES,OAAOF,Y,uBCRdG,EAAO,uCAAE,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,sDAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAICA,EAAKC,OAJN,uBAIZC,EAJY,EAIZA,KAEDC,EAAMD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACtB,MAAM,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVrB,kBAaZM,GAbY,4CAAF,sDCERO,EAAc,SAAC,GAAsB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIpC,OACI,yBAAKc,UAAU,mDACX,8BACA,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,MCLHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAAEA,GAAe,IAAD,EACdf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAuBxC,OAhBAC,qBAAU,WAGFxB,EAAQC,GACXwB,MAAK,SAAAC,GAAQH,EAAS,CACnBf,KAAMkB,EACNL,SAAS,SAMd,CAACpB,IAIGqB,EDlBqBK,CAAc1B,GAAjCa,EAH0B,EAGhCN,KAAca,EAHkB,EAGlBA,QAQjB,OANJO,QAAQC,IAAIf,GACZc,QAAQC,IAAIR,GAON,oCACA,wBAAIJ,UAAU,0BAA0BhB,GAGvCoB,GAAW,uBAAGJ,UAAU,KAEzB,yBAAKA,UAAU,aAGJH,EAAOJ,KAAI,SAAAC,GAAG,OAEV,kBAAC,EAAD,eACAmB,IAAKnB,EAAIC,IACJD,UEMXoB,EA9BM,WAAK,MAIc7C,mBAAS,CAAC,KAJxB,mBAIf8C,EAJe,KAIH/C,EAJG,KAStB,OACI,oCACA,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAGA,4BACC+C,EAAWtB,KAAI,SAAAT,GAAQ,OACxB,kBAAC,EAAD,CACA6B,IAAK7B,EACLA,SAAUA,UCtBlBgC,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.abdfa9de.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  const [inputValue, setinputValue] = useState(\"\");\r\n   \r\n  const onChange = (e) =>{\r\n     setinputValue(e.target.value)\r\n\r\n    \r\n  }\r\n  const onclick = (e) =>{\r\n      e.preventDefault();\r\n      if(inputValue.trim().length > 5 ){\r\n        setCategories(cats=>[ inputValue, ...cats])\r\n        setinputValue(\"\");\r\n      }else{\r\n          alert(\"Mas de 5 letras\")\r\n      }\r\n      \r\n  }\r\n    return (\r\n       \r\n        <form onSubmit={onclick}>\r\n        <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={onChange}\r\n         />\r\n        </form>\r\n           \r\n    );\r\n}\r\n\r\nAddCategory.propTypes= {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export  const GetGift= async ( category )=>{\r\n    const url= `https://api.giphy.com/v1/gifs/search?q=${  encodeURI(category) }&api_key=V2D6slEQUcApfQE6omKvJOJlgMzbKfAg`\r\n\r\n    const resp = await fetch(url);\r\n    const {data}= await resp.json();\r\n    \r\n    const gift= data.map(img=>{\r\n        return{\r\n          id: img.id,\r\n          title: img.title,\r\n          url: img.images?.downsized_medium.url  \r\n        }  \r\n    })\r\n    return gift;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url }) => {\r\n\r\n   \r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__rotateInUpRight\">\r\n            <grid>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n            </grid>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport {GifGridItem} from \"./GifGridItem\";\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n//renombro data por images para que este mas claro\r\nconst {data: images, loading} = useFetchGifs( category);\r\n\r\nconsole.log(images)\r\nconsole.log(loading)\r\n\r\n\r\n \r\n        \r\n    return (\r\n        \r\n      <>\r\n      <h3 className=\"animate__fadeInDownBig\">{category}</h3>\r\n\r\n      \r\n      {loading && <p className=\"\"></p> }\r\n\r\n      <div className=\"card-grid\">\r\n     \r\n           \r\n                {images.map(img=>(\r\n                     \r\n                     <GifGridItem\r\n                     key={img.id}\r\n                      {...img}\r\n                      />\r\n                     \r\n                    \r\n                 ) )}\r\n           \r\n               \r\n           \r\n           </div> \r\n           \r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { GetGift } from \"../helpers/GetGift\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n            \r\n            GetGift(category)\r\n        .then(imgs=>{ setState({\r\n            data: imgs,\r\n            loading: false\r\n        })})\r\n       \r\n\r\n        \r\n        \r\n    }, [category])\r\n\r\n    \r\n\r\n    return state;//data: [], loading: true\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from \"./components/Addcategory\";\r\n\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\n\r\nconst GifExpertApp = () =>{\r\n   \r\n    //const categories = [\"Naruto\", \"Dragon\", \"Punch\" ];\r\n\r\n    const [categories, setCategories] = useState([\"\" ]);\r\n\r\n\r\n \r\n        \r\n    return(\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n       \r\n        \r\n        <ol>\r\n        {categories.map(category=>\r\n        <GifGrid \r\n        key={category} \r\n        category={category}/>\r\n        )}\r\n        </ol>\r\n       \r\n        \r\n       </>\r\n      \r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(\n    \n    <GifExpertApp  />,\n \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}